name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow when a new version tag is pushed

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          if [[ "${{ matrix.target }}" == *"musl"* ]]; then
            sudo apt-get install -y musl-tools
          elif [[ "${{ matrix.target }}" == *"armv7"* ]]; then
            sudo apt-get install -y gcc-arm-linux-gnueabihf
          elif [[ "${{ matrix.target }}" == *"aarch64"* ]]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          elif [[ "${{ matrix.target }}" == *"i686"* ]]; then
            sudo apt-get install -y gcc-multilib
          else
            sudo apt-get install -y build-essential
          fi

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build the binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Rename the binary
        run: mv target/${{ matrix.target }}/release/shpool target/${{ matrix.target }}/release/shpool-${{ matrix.target }}

      - name: Upload release asset
        uses: actions/upload-artifact@v3
        with:
          name: shpool-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/shpool-${{ matrix.target }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Download artifacts for each architecture
        uses: actions/download-artifact@v3
        with:
          name: shpool-${{ matrix.target }}
          path: download/${{ matrix.target }}

      - name: List downloaded files
        run: ls -R download

      - name: Extract tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create a release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            download/x86_64-unknown-linux-gnu/shpool-x86_64-unknown-linux-gnu
            download/x86_64-unknown-linux-musl/shpool-x86_64-unknown-linux-musl
            download/i686-unknown-linux-gnu/shpool-i686-unknown-linux-gnu
            download/i686-unknown-linux-musl/shpool-i686-unknown-linux-musl
            download/armv7-unknown-linux-gnueabihf/shpool-armv7-unknown-linux-gnueabihf
            download/armv7-unknown-linux-musleabihf/shpool-armv7-unknown-linux-musleabihf
            download/aarch64-unknown-linux-gnu/shpool-aarch64-unknown-linux-gnu
            download/aarch64-unknown-linux-musl/shpool-aarch64-unknown-linux-musl
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
