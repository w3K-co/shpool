name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow when a new version tag is pushed

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          x86_64-unknown-linux-gnu,
          x86_64-unknown-linux-musl,
          i686-unknown-linux-gnu,
          i686-unknown-linux-musl,
          armv7-unknown-linux-gnueabihf,
          armv7-unknown-linux-musleabihf,
          aarch64-unknown-linux-gnu,
          aarch64-unknown-linux-musl
        ]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Add musl target
        if: contains(matrix.target, 'musl')
        run: rustup target add ${{ matrix.target }}

      - name: Build the binary
        run: |
          if [ "${{ matrix.target }}" == "i686-unknown-linux-musl" ]; then
            docker run --rm -v $(pwd):/home/rust/src messense/rust-musl-cross:i686-musl cargo build --release --target ${{ matrix.target }}
          elif [ "${{ matrix.target }}" == "armv7-unknown-linux-gnueabihf" ]; then
            docker run --rm -v $(pwd):/home/rust/src messense/rust-musl-cross:armv7 cargo build --release --target ${{ matrix.target }}
          elif [ "${{ matrix.target }}" == "armv7-unknown-linux-musleabihf" ]; then
            docker run --rm -v $(pwd):/home/rust/src messense/rust-musl-cross:armv7-musleabihf cargo build --release --target ${{ matrix.target }}
          elif [ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]; then
            docker run --rm -v $(pwd):/home/rust/src messense/rust-musl-cross:aarch64 cargo build --release --target ${{ matrix.target }}
          elif [ "${{ matrix.target }}" == "aarch64-unknown-linux-musl" ]; then
            docker run --rm -v $(pwd):/home/rust/src messense/rust-musl-cross:aarch64-musl cargo build --release --target ${{ matrix.target }}
          else
            docker run --rm -v $(pwd):/home/rust/src ekidd/rust-musl-builder:latest cargo build --release --target ${{ matrix.target }}
          fi

      - name: Rename the binary
        run: mv target/${{ matrix.target }}/release/shpool target/${{ matrix.target }}/release/shpool-${{ matrix.target }}

      - name: Upload release asset
        uses: actions/upload-artifact@v3
        with:
          name: shpool-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/shpool-${{ matrix.target }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Download GNU binaries
        uses: actions/download-artifact@v3
        with:
          name: shpool-x86_64-unknown-linux-gnu
          path: download/x86_64-unknown-linux-gnu

      - name: Download musl binaries
        uses: actions/download-artifact@v3
        with:
          name: shpool-x86_64-unknown-linux-musl
          path: download/x86_64-unknown-linux-musl

      - name: Download i686 GNU binaries
        uses: actions/download-artifact@v3
        with:
          name: shpool-i686-unknown-linux-gnu
          path: download/i686-unknown-linux-gnu

      - name: Download i686 musl binaries
        uses: actions/download-artifact@v3
        with:
          name: shpool-i686-unknown-linux-musl
          path: download/i686-unknown-linux-musl

      - name: Download armv7 GNU binaries
        uses: actions/download-artifact@v3
        with:
          name: shpool-armv7-unknown-linux-gnueabihf
          path: download/armv7-unknown-linux-gnueabihf

      - name: Download armv7 musl binaries
        uses: actions/download-artifact@v3
        with:
          name: shpool-armv7-unknown-linux-musleabihf
          path: download/armv7-unknown-linux-musleabihf

      - name: Download aarch64 GNU binaries
        uses: actions/download-artifact@v3
        with:
          name: shpool-aarch64-unknown-linux-gnu
          path: download/aarch64-unknown-linux-gnu

      - name: Download aarch64 musl binaries
        uses: actions/download-artifact@v3
        with:
          name: shpool-aarch64-unknown-linux-musl
          path: download/aarch64-unknown-linux-musl

      - name: List downloaded files
        run: ls -R download

      - name: Extract tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create a release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            download/x86_64-unknown-linux-gnu/shpool-x86_64-unknown-linux-gnu
            download/x86_64-unknown-linux-musl/shpool-x86_64-unknown-linux-musl
            download/i686-unknown-linux-gnu/shpool-i686-unknown-linux-gnu
            download/i686-unknown-linux-musl/shpool-i686-unknown-linux-musl
            download/armv7-unknown-linux-gnueabihf/shpool-armv7-unknown-linux-gnueabihf
            download/armv7-unknown-linux-musleabihf/shpool-armv7-unknown-linux-musleabihf
            download/aarch64-unknown-linux-gnu/shpool-aarch64-unknown-linux-gnu
            download/aarch64-unknown-linux-musl/shpool-aarch64-unknown-linux-musl
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
